import type { NextPage } from 'next'
import Head from 'next/head'
import { trpc } from '../utils/trpc'
import { useContent } from '../hooks/useContent'
import Link from 'next/link'
import {
  Entry,
  EntryCollection,
  EntryFields,
  ContentfulCollection
} from 'contentful'

interface NavItemsFields {
  id: number
  name: string
  path: string
  title: string
}

const SidebarLink: React.FC<any> = (props) => {
  const { navItem } = props
  const { fields } = navItem
  const { title, path } = fields

  return (
    <li>
      <Link href={path}>{title}</Link>
    </li>
  )
}

interface SideBarProps {
  navBarItems?: Entry<NavItemsFields>
}

const Sidebar = ({ navBarItems }: any) => {
  console.log('navBarItems', navBarItems)
  if (!navBarItems) {
    return null
  }
  return (
    <ul>
      Kyle Lee
      {navBarItems
        ?.sort((a: any, b: any) => a?.fields?.id - b?.fields?.id) //sort by ID
        .map((navItem: Entry<NavItemsFields>, i: number) => {
          return <SidebarLink key={i} navItem={navItem} />
        })}
    </ul>
  )
}

const Home: NextPage = () => {
  const hello = trpc.useQuery(['example.hello', { text: 'from tRPC' }])
  const { data, isLoading, isError } = useContent({
    content_type: 'navbarItems'
  })

  if (isLoading) {
    return <h2>Loading...</h2>
  }

  if (isError) {
    return <h2>An error has ocurred</h2>
  }

  if (!data || !data?.items) {
    return <h2>An error has ocurred</h2>
  }

  return (
    <>
      <Head>
        <title>Create T3 App</title>
        <meta name="description" content="Generated by create-t3-app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>

      <main className="container mx-auto flex flex-col items-center justify-center min-h-screen p-4">
        <Sidebar navBarItems={data.items} />
        <h1 className="text-5xl md:text-[5rem] leading-normal font-extrabold text-gray-700">
          Create <span className="text-purple-300">T3</span> App
        </h1>
        <p className="text-2xl text-gray-700">This stack uses:</p>
        <div className="grid gap-3 pt-3 mt-3 text-center md:grid-cols-2 lg:w-2/3">
          <TechnologyCard
            name="NextJS"
            description="The React framework for production"
            documentation="https://nextjs.org/"
          />
          <TechnologyCard
            name="TypeScript"
            description="Strongly typed programming language that builds on JavaScript, giving you better tooling at any scale"
            documentation="https://www.typescriptlang.org/"
          />
          <TechnologyCard
            name="TailwindCSS"
            description="Rapidly build modern websites without ever leaving your HTML"
            documentation="https://tailwindcss.com/"
          />
          <TechnologyCard
            name="tRPC"
            description="End-to-end typesafe APIs made easy"
            documentation="https://trpc.io/"
          />
          <TechnologyCard
            name="Next-Auth"
            description="Authentication for Next.js"
            documentation="https://next-auth.js.org/"
          />
          <TechnologyCard
            name="Prisma"
            description="Build data-driven JavaScript & TypeScript apps in less time"
            documentation="https://www.prisma.io/docs/"
          />
        </div>
        <div className="pt-6 text-2xl text-blue-500 flex justify-center items-center w-full">
          {hello.data ? <p>{hello.data.greeting}</p> : <p>Loading..</p>}
        </div>
      </main>
    </>
  )
}

export default Home

type TechnologyCardProps = {
  name: string
  description: string
  documentation: string
}

const TechnologyCard = ({
  name,
  description,
  documentation
}: TechnologyCardProps) => {
  return (
    <section className="flex flex-col justify-center p-6 duration-500 border-2 border-gray-500 rounded shadow-xl motion-safe:hover:scale-105">
      <h2 className="text-lg text-gray-700">{name}</h2>
      <p className="text-sm text-gray-600">{description}</p>
      <a
        className="mt-3 text-sm underline text-violet-500 decoration-dotted underline-offset-2"
        href={documentation}
        target="_blank"
        rel="noreferrer"
      >
        Documentation
      </a>
    </section>
  )
}
